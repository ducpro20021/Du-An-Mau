/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import DAO.HocVienDAO;
import DAO.KhoaHocDAO;
import DAO.NguoiHocDAO;
import DAO.chuyenDeDAO;
import HELPER.utilityHelper;
import MODEL.ChuyenDe;
import MODEL.HocVien;
import MODEL.KhoaHoc;
import MODEL.NguoiHoc;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DELL
 */
public class QLHocVien extends javax.swing.JInternalFrame {

    chuyenDeDAO cddao = new chuyenDeDAO();
    KhoaHocDAO khdao = new KhoaHocDAO();
    HocVienDAO hvdao = new HocVienDAO();
    NguoiHocDAO nhdao = new NguoiHocDAO();
    

    /**
     * Creates new form QLHocVien
     */
    public QLHocVien() {
        initComponents();
        this.SetComboCD();
        this.FillTableNguoiHoc();
        btnSua.setEnabled(false);
        fillComboBoxKhoaHoc();
    }

    void fillComboBoxKhoaHoc(){
        DefaultComboBoxModel model=(DefaultComboBoxModel) cboKhoaHoc.getModel();
        model.removeAllElements();
        List<KhoaHoc>list=khdao.selectAll();
        for (KhoaHoc kh : list) {
            model.addElement(kh);
        }
        cboKhoaHoc.setSelectedIndex(0);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtSearchHV = new javax.swing.JTextField();
        btnSecrh = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblHocVien = new javax.swing.JTable();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNguoiHoc = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        txtSearchNH = new javax.swing.JTextField();
        btnSerchNH = new javax.swing.JButton();
        btnThemKhoaHoc = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        cboChuyenDe = new javax.swing.JComboBox<>();
        jPanel8 = new javax.swing.JPanel();
        cboKhoaHoc = new javax.swing.JComboBox<>();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setText("Quản Lý Học Viên");

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setFont(new java.awt.Font("SVN-Androgyne", 0, 11)); // NOI18N
        jLabel3.setText("Nhập mã học viên");

        btnSecrh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImageIcon/Search.png"))); // NOI18N
        btnSecrh.setText("Tìm Kiếm");
        btnSecrh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSecrhActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(71, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(txtSearchHV, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(btnSecrh)
                .addGap(23, 23, 23))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel3)
                .addComponent(txtSearchHV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btnSecrh))
        );

        tblHocVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã HV", "Mã NH", "Họ Tên", "Điểm"
            }
        ));
        tblHocVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHocVienMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblHocVienMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tblHocVien);

        btnXoa.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnXoa.setText("Xóa khỏi khóa học");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnSua.setText("Cập nhật điểm");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnXoa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSua)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(230, 230, 230))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(174, 174, 174))
        );

        jTabbedPane4.addTab("Học Viên", jPanel3);

        tblNguoiHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã NH", "Họ và tên", "Giới tính", "Ngày sinh", "Điện thoại", "Email", "Mã NV", "Ngày ĐK"
            }
        ));
        jScrollPane1.setViewportView(tblNguoiHoc);

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel9.setFont(new java.awt.Font("SVN-Androgyne", 0, 11)); // NOI18N
        jLabel9.setText("Nhập mã người học");

        btnSerchNH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImageIcon/Search.png"))); // NOI18N
        btnSerchNH.setText("Tìm Kiếm");
        btnSerchNH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSerchNHActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(txtSearchNH, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(btnSerchNH)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtSearchNH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSerchNH))
                .addGap(0, 3, Short.MAX_VALUE))
        );

        btnThemKhoaHoc.setText("Thêm vào khóa học");
        btnThemKhoaHoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemKhoaHocActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 604, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnThemKhoaHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnThemKhoaHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane4.addTab("Người Học", jPanel2);

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImageIcon/back.png"))); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Chuyên đề"));

        cboChuyenDe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboChuyenDe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboChuyenDeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cboChuyenDe, 0, 266, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(cboChuyenDe, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Khóa học"));

        cboKhoaHoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboKhoaHoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboKhoaHocActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cboKhoaHoc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(27, 27, 27))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(cboKhoaHoc)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane4)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(130, 130, 130)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnBack)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btnBackActionPerformed

    private void cboChuyenDeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboChuyenDeActionPerformed
        DefaultComboBoxModel mol = (DefaultComboBoxModel) cboChuyenDe.getModel();
        String tencd = String.valueOf(mol.getSelectedItem());
        System.out.println(tencd);
        try {
            String ma = LayMaCD(tencd);
            this.SetComboKH(ma);
        } catch (Exception e) {
        }


    }//GEN-LAST:event_cboChuyenDeActionPerformed

    private void cboKhoaHocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboKhoaHocActionPerformed
        try {
            this.FillTableHocVien();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_cboKhoaHocActionPerformed

    private void btnSerchNHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSerchNHActionPerformed
        String ma = txtSearchNH.getText();
        if (ma.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Phải nhập vào mã chuyên đề để tìm kiếm!", "", JOptionPane.ERROR_MESSAGE);
            txtSearchNH.requestFocus();
            return;
        } else {
            this.TimKiemNguoiHoc(ma);
        }
    }//GEN-LAST:event_btnSerchNHActionPerformed

    private void btnSecrhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSecrhActionPerformed
        String ma = txtSearchHV.getText();
        if (ma.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Phải nhập vào mã học viên để tìm kiếm!", "", JOptionPane.ERROR_MESSAGE);
            txtSearchHV.requestFocus();
            return;
        } else {
            this.TimKiemHocVien(ma);
        }
    }//GEN-LAST:event_btnSecrhActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        DefaultComboBoxModel cbomol = (DefaultComboBoxModel) cboKhoaHoc.getModel();
        int makh = (int) cbomol.getSelectedItem();
        List<HocVien> ls = hvdao.selectByKhoaHoc(makh);
        int index = tblHocVien.getSelectedRow();
        HocVien hv = ls.get(index);
        this.Sua(hv);
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnThemKhoaHocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemKhoaHocActionPerformed
        this.Them();
    }//GEN-LAST:event_btnThemKhoaHocActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed

        this.Xoa();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void tblHocVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHocVienMouseClicked
        btnSua.setEnabled(true);
    }//GEN-LAST:event_tblHocVienMouseClicked

    private void tblHocVienMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHocVienMousePressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_tblHocVienMousePressed

    public void SetComboCD() {
        DefaultComboBoxModel mol = (DefaultComboBoxModel) cboChuyenDe.getModel();
        mol.removeAllElements();
        List<ChuyenDe> ls = cddao.selectAll();

        for (ChuyenDe l : ls) {
            mol.addElement(l.getTenCD());
        }
    }

    public void SetComboKH(String ma) {
        DefaultComboBoxModel mol = (DefaultComboBoxModel) cboKhoaHoc.getModel();
        mol.removeAllElements();
        List<KhoaHoc> ls = khdao.selectByChuyenDe(ma);
        for (KhoaHoc l : ls) {
            mol.addElement(l.getMaKH());
        }
    }

    private String LayMaCD(String ten) {
        List<ChuyenDe> ls = cddao.selectAll();
        String ma = null;
        for (int i = 0; i < ls.size(); i++) {
            if (ten.equals(ls.get(i).getTenCD())) {
                ma = ls.get(i).getMaCD();
            }
        }
        return ma;
    }

//    void fillTableBangDiem(){
//        DefaultTableModel model=(DefaultTableModel)tblHocVien.getModel();
//        model.setRowCount(0);
//        KhoaHoc kh=(KhoaHoc)cboKhoaHoc.getSelectedItem();
//        List<Object[]>list=dao.getBangDiem(kh.getMaKH());
//        for (Object[] row : list) {
//            double diem=(double)row[2];
//            model.addRow(new Object[]{
//                row[0],row[1],diem,utilityHelper.getRank(diem)
//            });
//
//        }
//    }
    
    public void FillTableHocVien() {
        DefaultComboBoxModel cbomol = (DefaultComboBoxModel) cboKhoaHoc.getModel();
        int makh = (int) cbomol.getSelectedItem();
        DefaultTableModel mol = (DefaultTableModel) tblHocVien.getModel();
        List<HocVien> ls = hvdao.selectByKhoaHoc(makh);
        mol.setRowCount(0);
        for (int i = 0; i < ls.size(); i++) {
            mol.addRow(new Object[]{i + 1, ls.get(i).getMaHV(), ls.get(i).getMaNH(), this.LayTenNguoiHoc(ls.get(i).getMaNH()), ls.get(i).getDiem()});
        }
    }

    public String LayTenNguoiHoc(String ma) {
        List<NguoiHoc> ls = nhdao.selectAll();
        String ten = null;
        for (NguoiHoc l : ls) {
            if (ma.equals(l.getMaNguoiHoc())) {
                ten = l.getHoTen();
            }
        }
        return ten;
    }

    public void FillTableNguoiHoc() {
        DefaultTableModel mol = (DefaultTableModel) tblNguoiHoc.getModel();
        List<NguoiHoc> ls = nhdao.selectAll();
        mol.setRowCount(0);

        for (NguoiHoc nh : ls) {
            mol.addRow(new Object[]{nh.getMaNguoiHoc(), nh.getHoTen(), nh.isGioiTinh(), nh.getNgaySinh(), nh.getDienThoai(), nh.getEmail(), nh.getMaNhanVien(), nh.getNgayDangKy()});
        }
    }

    private void TimKiemNguoiHoc(String ma) {
        NguoiHoc nh = nhdao.SelectByID(ma);
        List<NguoiHoc> ls = nhdao.selectAll();
        int index = -1;

        if (nh == null) {
            JOptionPane.showMessageDialog(this, "Không tìm thấy.");
            txtSearchNH.requestFocus();
            return;
        } else {
            for (int i = 0; i < ls.size(); i++) {
                if (nh.getMaNguoiHoc().equals(ls.get(i).getMaNguoiHoc())) {
                    index = i;
                }
            }
            try {
                tblNguoiHoc.setRowSelectionInterval(index, index);
                txtSearchNH.setText("");
            } catch (Exception e) {
            }
        }
    }

    private void TimKiemHocVien(String ma) {
        DefaultComboBoxModel cbomol = (DefaultComboBoxModel) cboKhoaHoc.getModel();
        int makh = (int) cbomol.getSelectedItem();
        DefaultTableModel mol = (DefaultTableModel) tblHocVien.getModel();
        List<HocVien> ls = hvdao.selectByKhoaHoc(makh);
        HocVien hv = hvdao.selectById(ma);
        int index = -1;
        if (hv == null) {
            JOptionPane.showMessageDialog(this, "Không tìm thấy.");
            txtSearchNH.requestFocus();
            return;
        } else {
            for (int i = 0; i < ls.size(); i++) {
                if (hv.getMaHV() == (ls.get(i).getMaHV())) {
                    index = i;
                }
            }
            if (index >= 0) {
                tblHocVien.setRowSelectionInterval(index, index);
                txtSearchHV.setText("");

            } else {
                JOptionPane.showMessageDialog(this, "Học viên này không ở trong khóa học");
                txtSearchHV.requestFocus();
            }
        }
    }

    private void Them() {
        int index = tblNguoiHoc.getSelectedRow();
        List<NguoiHoc> ls = nhdao.selectAll();
        String manh = ls.get(index).getMaNguoiHoc();
        KhoaHoc makh = (KhoaHoc) cboKhoaHoc.getSelectedItem();
        List<HocVien> lshv = hvdao.selectAll();
        int mahv = lshv.size() + 1;
        HocVien hv = new HocVien(mahv, makh.getMaKH(), manh, 0.0f);
        if (hvdao.Insert(hv) > 0) {
            JOptionPane.showMessageDialog(this, "Thêm thành công.");
            FillTableHocVien();
        } else {
            JOptionPane.showMessageDialog(this, "Thêm thất bại.");
        }
    }

    private void Xoa() {
        DefaultComboBoxModel cbomol = (DefaultComboBoxModel) cboKhoaHoc.getModel();
        int makh = (int) cbomol.getSelectedItem();
        List<HocVien> ls = hvdao.selectByKhoaHoc(makh);
        int index = tblHocVien.getSelectedRow();
        HocVien hv = ls.get(index);
        if (hv.getDiem() > 0) {
            int a = JOptionPane.showConfirmDialog(this, "Học viên này đang có điểm.\nBạn có muốn xóa không", "Xóa", JOptionPane.YES_NO_OPTION);
            if (a == JOptionPane.YES_OPTION) {
                hvdao.Delete(hv.getMaHV());
                JOptionPane.showMessageDialog(this, "Xóa thành công.");
                FillTableHocVien();
                return;
            }
        } else if (hvdao.Delete(hv.getMaHV()) > 0) {
            int a = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa học viên này không", "Xóa", JOptionPane.YES_NO_OPTION);
            if (a == JOptionPane.YES_OPTION) {
                JOptionPane.showMessageDialog(this, "Xóa thành công.");
                FillTableHocVien();
                return;
            } else {
                return;
            }
        } else {
            JOptionPane.showMessageDialog(this, "Xóa thất bại.");
            return;
        }

    }

    public void Sua(HocVien hv) {
        String diemst = JOptionPane.showInputDialog(this, "Nhập vào điểm");
        try {
            double diem = Double.valueOf(diemst);
            if (diem < 0 || diem > 10) {
                JOptionPane.showMessageDialog(this, "Điểm không hợp lệ", "Thông báo", JOptionPane.ERROR_MESSAGE);
                return;
            } else {
                hv.setDiem((float) diem);
                if (hvdao.Update(hv) > 0) {
                    JOptionPane.showMessageDialog(this, "Cập nhật thành công");
                    this.FillTableHocVien();
                    return;
                } else {
                    JOptionPane.showConfirmDialog(this, "Cập nhật thất bại!");
                    return;
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Phải nhập số", "", JOptionPane.ERROR_MESSAGE);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSecrh;
    private javax.swing.JButton btnSerchNH;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThemKhoaHoc;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cboChuyenDe;
    private javax.swing.JComboBox<String> cboKhoaHoc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JTable tblHocVien;
    private javax.swing.JTable tblNguoiHoc;
    private javax.swing.JTextField txtSearchHV;
    private javax.swing.JTextField txtSearchNH;
    // End of variables declaration//GEN-END:variables
}
